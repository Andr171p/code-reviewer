# Безопасность запуска приложений

## Область применения: управляемое приложение, обычное приложение.

1. При запуске внешней программы из кода требуется составлять строку запуска таким образом, чтобы она собиралась только из проверенных частей.
Если одна из частей, из которых собирается строка запуска, содержит данные, полученные из базы данных, из поля ввода на форме или прочитаны из хранилища настроек, то перед запуском программы требуется проверить, являются ли запуск безопасным. Безопасными считаются такие строковые данные, которые не содержат в себе следующие символы: "$", "`", "|", "||" ";", "&", "&&".

Данное требование распространяется на все способы запуска программы, в том числе:

 - КомандаСистемы(<СтрокаКоманды>, <ТекущийКаталог>)
 - ЗапуститьПриложение(<СтрокаКоманды>, <ТекущийКаталог>, <ДождатьсяЗавершения>, <КодВозврата>) ;
 - НачатьЗапускПриложения(<ОписаниеОповещения>, <СтрокаКоманды>, <ТекущийКаталог>, <ДождатьсяЗавершения>);
 - ПерейтиПоНавигационнойСсылке(<НавигационнаяСсылка>);
 - Использование COM объектов "Wscript.Shell" и "Shell.Application".

2. При использовании Библиотеки стандартных подсистем для запуска внешних программ требуется использовать следующий программный интерфейс:

2.1. Для того чтобы открыть проводник с фокусировкой на указанном файле, использовать процедуру ФайловаяСистемаКлиент.ОткрытьПроводник.

Например:

```bsl
// Для Windows
ФайловаяСистемаКлиент.ОткрытьПроводник("C:\Users");
ФайловаяСистемаКлиент.ОткрытьПроводник("C:\Program Files\1cv8\common\1cestart.exe");
```

```bsl
// Для Linux
ФайловаяСистемаКлиент.ОткрытьПроводник("/home/");
ФайловаяСистемаКлиент.ОткрытьПроводник("/opt/1C/v8.3/x86_64/1cv8c");
```

2.2. Для того чтобы открыть файл в программе просмотра, ассоциированной с расширением файла, использовать процедуру ФайловаяСистемаКлиент.ОткрытьФайл. Она исключает запуск исполняемых файлов (например, *.exe, *.bin, *.apk).
Например:

```bsl
ФайловаяСистемаКлиент.ОткрытьФайл(КаталогДокументов() + "test.pdf");
ФайловаяСистемаКлиент.ОткрытьФайл("D:\test.xlsx");
```

2.3. Для того чтобы открыть веб-страницу в браузере, запустить программу по протоколу (например, mailto:, skype:, tel: и.т.д) или открыть навигационную ссылку информационной базы следует использовать процедуру ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку. При этом в веб-клиенте пользователю будет предложено установить расширение для работы с файлами в тех случаях, когда оно необходимо для выполнения операции.
Например:

```bsl
ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://1c.ru");
ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/navigationpoint/startpage"); // начальная страница.
ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("mailto:help@1c.ru");
ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("skype:echo123?call");
```
В то же время, для открытия проводника или файла в программе просмотра не следует формировать ссылку по протоколу file://, для этого следует использовать одну из процедур: ОткрытьПроводник (см. п. 2.1) или ОткрытьФайл (см. п. 2.2).

2.4. Для того чтобы:

 - запускать файлы на исполнение (например, *.exe, *bat),
 - использовать системные команды (например, ping, tracert или traceroute, обращаться к rac-клиенту),
 - выполнять команды на сервере,
 - а также получать код возврата и значения потоков вывода (stdout) и ошибок (stderr)

следует использовать ФайловаяСистемаКлиент.ЗапуститьПрограмму (в клиентском коде) и ФайловаяСистема.ЗапуститьПрограмму (в серверном коде).
Например:
```bsl
ФайловаяСистемаКлиент.ЗапуститьПрограмму("calc");
```
Пример запуска с ожиданием завершения и получения кода возврата:
```bsl
ПараметрыЗапускаПрограммы = ФайловаяСистема.ПараметрыЗапускаПрограммы();
ПараметрыЗапускаПрограммы.ДождатьсяЗавершения = Истина;
ПараметрыЗапускаПрограммы.ПолучитьПотокВывода = Истина;
ПараметрыЗапускаПрограммы.ПолучитьПотокОшибок = Истина;

Результат = ФайловаяСистема.ЗапуститьПрограмму(
 "ping 127.0.0.1 -n 5", ПараметрыЗапускаПрограммы);

КодВозврата = Результат.КодВозврата;
ПотокВывода = Результат.ПотокВывода;
ПотокОшибок = Результат.ПотокОшибок;
```

2.5. Не рекомендуется программно (динамически) формировать исполняемые файлы для запуска. Например, записывать во временный каталог исполняемый bat-файл с последующим его запуском. Следует рассчитывать на то, что в политиках информационной безопасности операционной системы может быть настроен запрет запуска пользователями всех приложений, кроме тех, что разрешены. Доверенные скрипты и приложения могут быть внесены в исключения, если они подписаны электронной подписью или по конкретным хешам исполняемых файлов.

В частности, исполняемые файлы, программно формируемые во временном каталоге, вынуждают добавлять временный каталог целиком в исключения из правил. Тем самым возникает потенциальная угроза информационной безопасности: если в инфраструктуру предприятия проникает злоумышленник, то ему ничто не помешает разместить вредоносное приложение в это временный каталог и запустить его.

Вместо формирования исполняемых файлов рекомендуется:
 - формировать строку запуска для передачи в ФайловаяСистема.ЗапуститьПрограмму (без временного исполняемого файла);
 - передавать параметры во временный исполняемый файл со статическим содержимым:
 - в качестве параметров запуска командной строки:
    - %temp%\install.bat /FeatureName "Printing-PrintToPDFServices-Features" /NoRestart
    - через неисполняемый файл параметров, который предварительно  формируется и записывается:
      %temp%\install.bat "%temp%\install.ini"

Во втором случае администратор может разрешить для запуска хеши конкретных исполняемых файлов в политиках информационной безопасности.

3. Для выполнения команды, требующей запуск внешней программы в режиме наивысших прав (например, в ОС Windows - с отображением запроса повышения прав UAC), необходимо:
 - реализовывать ее на управляемой форме в виде кнопки или пункта меню;
 - а на самой кнопке, начинающей выполнение действия, отобразить значок щита (общая картинка ЗначокЩита из Библиотеки стандартных подсистем).
